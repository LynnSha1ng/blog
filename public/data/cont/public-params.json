{
  "name": "public-params",
  "cont": "## mode\r\n\r\n`fs.chmod()`、`fs.chmodSync()`等方法中使用的`mode`参数是使用以下常量的逻辑或创建的数字位掩码：\r\n\r\n| 常量                   | 八进制  | 描述                |\r\n| ---------------------- | ------- | ------------------- |\r\n| `fs.constants.S_IRUSR` | `0o400` | 由所有者可读        |\r\n| `fs.constants.S_IWUSR` | `0o200` | 由所有者可写        |\r\n| `fs.constants.S_IXUSR` | `0o100` | 由所有者可执行/搜索 |\r\n| `fs.constants.S_IRGRP` | `0o40`  | 由群组可读          |\r\n| `fs.constants.S_IWGRP` | `0o20`  | 由群组可写          |\r\n| `fs.constants.S_IXGRP` | `0o10`  | 由群组可执行/搜索   |\r\n| `fs.constants.S_IROTH` | `0o4`   | 由其他人可读        |\r\n| `fs.constants.S_IWOTH` | `0o2`   | 由其他人可写        |\r\n| `fs.constants.S_IXOTH` | `0o1`   | 由其他人可执行/搜索 |\r\n\r\n构建 `mode` 的一种更简单的方法是使用三个八进制数字的序列（例如 `765`）。最左边的数字指定文件所有者的权限。中间的数字指定群组的权限。最右边的数字指定其他人的权限。\r\n\r\n| 数字 | 描述               |\r\n| ---- | ------------------ |\r\n| `7`  | 可读、可写、可执行 |\r\n| `6`  | 可读可写           |\r\n| `5`  | 可读可执行         |\r\n| `4`  | 只读               |\r\n| `3`  | 可写可执行         |\r\n| `2`  | 只写               |\r\n| `1`  | 只执行             |\r\n| `0`  | 没有权限           |\r\n\r\n例如，八进制值 `0o765` 表示：\r\n\r\n- 所有者可以读取、写入、以及执行文件。\r\n\r\n- 群组可以读取和写入文件。\r\n\r\n- 其他人可以读取和执行文件。\r\n\r\n注意事项：在 Windows 上只能修改写权限，没有实现群组、所有者、其他权限的区分。\r\n\r\n## flag\r\n\r\n以下标志在 `flag` 选项接受字符串的任何地方可用。\r\n\r\n- `'a'`：打开文件进行追加。如果文件不存在，则创建该文件。\r\n\r\n- `'ax'`：类似于 `'a'` 但如果路径存在则失败。\r\n\r\n- `'a+'`：打开文件进行读取和追加。如果文件不存在，则创建该文件。\r\n\r\n- `'ax+'`：类似于 `'a+'` 但如果路径存在则失败。\r\n\r\n- `'as'`：以同步模式打开文件进行追加。如果文件不存在，则创建该文件。\r\n\r\n- `'as+'`：以同步模式打开文件进行读取和追加。如果文件不存在，则创建该文件。\r\n\r\n- `'r'`：打开文件进行读取。如果文件不存在，则会发生异常。\r\n\r\n- `'rs'`：打开文件以同步模式读取。如果文件不存在，则会发生异常。\r\n\r\n- `'r+'`：打开文件进行读写。如果文件不存在，则会发生异常。\r\n\r\n- `'rs+'`：以同步模式打开文件进行读写。指示操作系统绕过本地文件系统缓存。\r\n\r\n      这主要用于在 NFS 挂载上打开文件，因为它允许跳过可能过时的本地缓存。它对 I/O 性能有非常实际的影响，因此除非需要，否则不建议使用此标志。\r\n\r\n      这不会将 `fs.open()` 或 `fsPromises.open()` 变成同步阻塞调用。如果需要同步操作，应该使用类似 `fs.openSync()` 的东西。\r\n\r\n- `'w'`：打开文件进行写入。创建（如果它不存在）或截断（如果它存在）该文件。\r\n\r\n- `'wx'`：类似于 `'w'` 但如果路径存在则失败。\r\n\r\n- `'w+'`：打开文件进行读写。创建（如果它不存在）或截断（如果它存在）该文件。\r\n\r\n- `'wx+'`：类似于 `'w+'` 但如果路径存在则失败。\r\n"
}